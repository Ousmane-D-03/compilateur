State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On EOF shift to state 1
-- On ADD shift to state 2
-- On main shift to state 11
## Reductions:

State 1:
## Known stack suffix:
## EOF
## LR(1) items:
main -> EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> EOF

State 2:
## Known stack suffix:
## ADD
## LR(1) items:
main -> ADD . SUB MUL DIV REC LPAR RPAR INT EOF [ # ]
## Transitions:
-- On SUB shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## ADD SUB
## LR(1) items:
main -> ADD SUB . MUL DIV REC LPAR RPAR INT EOF [ # ]
## Transitions:
-- On MUL shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## ADD SUB MUL
## LR(1) items:
main -> ADD SUB MUL . DIV REC LPAR RPAR INT EOF [ # ]
## Transitions:
-- On DIV shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## ADD SUB MUL DIV
## LR(1) items:
main -> ADD SUB MUL DIV . REC LPAR RPAR INT EOF [ # ]
## Transitions:
-- On REC shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## ADD SUB MUL DIV REC
## LR(1) items:
main -> ADD SUB MUL DIV REC . LPAR RPAR INT EOF [ # ]
## Transitions:
-- On LPAR shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## ADD SUB MUL DIV REC LPAR
## LR(1) items:
main -> ADD SUB MUL DIV REC LPAR . RPAR INT EOF [ # ]
## Transitions:
-- On RPAR shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## ADD SUB MUL DIV REC LPAR RPAR
## LR(1) items:
main -> ADD SUB MUL DIV REC LPAR RPAR . INT EOF [ # ]
## Transitions:
-- On INT shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## ADD SUB MUL DIV REC LPAR RPAR INT
## LR(1) items:
main -> ADD SUB MUL DIV REC LPAR RPAR INT . EOF [ # ]
## Transitions:
-- On EOF shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## ADD SUB MUL DIV REC LPAR RPAR INT EOF
## LR(1) items:
main -> ADD SUB MUL DIV REC LPAR RPAR INT EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> ADD SUB MUL DIV REC LPAR RPAR INT EOF

State 11:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

