
type token = 
  | SUB
  | RPAR
  | REC
  | MUL
  | LPAR
  | INT of (
# 4 "td_4/etf_parser/Parser.mly"
       (int)
# 12 "td_4/etf_parser/Parser__mock.ml.mock"
)
  | EOF
  | DIV
  | ADD

let menhir_begin_marker =
  0

and xv_main =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 13 "td_4/etf_parser/Parser.mly"
                                   _9
# 25 "td_4/etf_parser/Parser__mock.ml.mock"
   : unit) (_startpos__9_ : Lexing.position) (_endpos__9_ : Lexing.position) (_startofs__9_ : int) (_endofs__9_ : int) (_loc__9_ : Lexing.position * Lexing.position) (
# 13 "td_4/etf_parser/Parser.mly"
                               _8
# 29 "td_4/etf_parser/Parser__mock.ml.mock"
   : (
# 4 "td_4/etf_parser/Parser.mly"
       (int)
# 33 "td_4/etf_parser/Parser__mock.ml.mock"
  )) (_startpos__8_ : Lexing.position) (_endpos__8_ : Lexing.position) (_startofs__8_ : int) (_endofs__8_ : int) (_loc__8_ : Lexing.position * Lexing.position) (
# 13 "td_4/etf_parser/Parser.mly"
                          _7
# 37 "td_4/etf_parser/Parser__mock.ml.mock"
   : unit) (_startpos__7_ : Lexing.position) (_endpos__7_ : Lexing.position) (_startofs__7_ : int) (_endofs__7_ : int) (_loc__7_ : Lexing.position * Lexing.position) (
# 13 "td_4/etf_parser/Parser.mly"
                     _6
# 41 "td_4/etf_parser/Parser__mock.ml.mock"
   : unit) (_startpos__6_ : Lexing.position) (_endpos__6_ : Lexing.position) (_startofs__6_ : int) (_endofs__6_ : int) (_loc__6_ : Lexing.position * Lexing.position) (
# 13 "td_4/etf_parser/Parser.mly"
                 _5
# 45 "td_4/etf_parser/Parser__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 13 "td_4/etf_parser/Parser.mly"
             _4
# 49 "td_4/etf_parser/Parser__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 13 "td_4/etf_parser/Parser.mly"
         _3
# 53 "td_4/etf_parser/Parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 13 "td_4/etf_parser/Parser.mly"
     _2
# 57 "td_4/etf_parser/Parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 13 "td_4/etf_parser/Parser.mly"
 _1
# 61 "td_4/etf_parser/Parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    ((
# 13 "td_4/etf_parser/Parser.mly"
                                        ( (* Ã€ enlever -- ici pour Ã©viter des warnings !*))
# 66 "td_4/etf_parser/Parser__mock.ml.mock"
     : 'tv_main) : (
# 7 "td_4/etf_parser/Parser.mly"
       (unit)
# 70 "td_4/etf_parser/Parser__mock.ml.mock"
    )) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 12 "td_4/etf_parser/Parser.mly"
 _1
# 75 "td_4/etf_parser/Parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    ((
# 12 "td_4/etf_parser/Parser.mly"
              ()
# 80 "td_4/etf_parser/Parser__mock.ml.mock"
     : 'tv_main) : (
# 7 "td_4/etf_parser/Parser.mly"
       (unit)
# 84 "td_4/etf_parser/Parser__mock.ml.mock"
    )) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_main)

and menhir_end_marker =
  0
